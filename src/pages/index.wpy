<style lang="less">
  .top-swiper-view {
    width: 100%;
    height: 420rpx;
  }
  .top-swiper {
    width: 100%;
    height: 100%;
  } // 入住-离店日期
  .default-label-view {
    width: 100%;
  }
  .flex-label-view {
    display: flex;
    width: 670rpx;
    height: 86rpx;
    padding: 15rpx 0;
    align-items: center;
    margin: 0rpx auto 0px auto;
    justify-content: space-between;
    border-bottom: 2rpx solid #eaeaea;
  }
  .flex-item-left-view {
    color: #333333;
    font-size: 32rpx;
    line-height: 86rpx;
  }
  .flex-item-right-view {
    color: #fa8c1d;
    font-size: 22rpx; // height: 86rpx;
    width: 88rpx;
  }
  .item-right-img-view {
    width: 38rpx;
    height: 38rpx;
    margin: 0px auto;
  }
  .item-right-label-view {
    width: 88rpx;
    height: 40rpx;
    font-size: 22rpx;
    line-height: 40rpx;
  }
  .flex-date-info-view {
    position: relative;
    display: flex;
    justify-content: space-between;
    width: 670rpx;
    height: 140rpx;
    margin: 0 auto;
    border-bottom: 2rpx solid #eaeaea;
  }
  .flex-date-item-left-view {
    height: 140rpx;
  }
  .item-left-top-label-view {
    height: 32rpx;
    line-height: 32rpx;
    color: #333333;
    font-size: 22rpx;
    margin-top: 30rpx;
  }
  .item-left-bottom-label-view {
    height: 40rpx;
    line-height: 40rpx;
    color: #333333;
    font-size: 32rpx;
    margin-top: 10rpx;
  }
  .abs-mid-label-view {
    position: absolute;
    bottom: 32rpx;
    right: 290rpx;
    font-size: 28rpx;
    color: #333333;
    height: 40rpx;
    line-height: 40rpx;
    text-align: center;
    border-bottom: 2rpx solid #fa8c1d;
  }
  .flex-address-left-view {
    color: #333333;
    font-size: 28rpx;
    line-height: 86rpx;
    width: 600rpx;
  }
  .pop-label-view {
    margin: 0 30rpx 0 30rpx;
    width: 690rpx;
  }
  .pop-label-view-title {
    color: #333333;
    font-size: 28rpx;
    width: 56rpx;
    height: 40rpx;
  }
  .pop-label-view-peice {
    width: 100%;
    height: 345rpx;
    margin: 30rpx 0 0 0;
  }
  .pop-label-view-star {
    width: 100%;
    height: 278rpx;
  }
  .pop-label-view-star-menus {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    margin: 20rpx 0 0 0;
  }
  .pop-label-view-star-menu {
    width: 216rpx;
    height: 70rpx;
    line-height: 70rpx;
    font-size: 28rpx;
    color: #333333;
    text-align: center;
    margin-bottom: 20rpx;
    border: 2rpx solid #DDDDDD;
  }
  .popup-bottom-label-view {
    display: flex;
  }
  .pop-label-view-button {
    width: 376rpx;
    height: 100rpx;
    border: 0;
    border-radius: 0;
    color: #ffffff;
    font-size: 30rpx;
    line-height: 100rpx;
    &:active {
      opacity: .7;
    }
  }
  .checked-menu {
    background: #ffffff;
    color: #ff6600;
    border: 1rpx solid #ff6600;
  }
  .submit-button-view {
    font-size: 34rpx;
    color: #ffffff;
    text-align: center;
    width: 670rpx;
    height: 90rpx;
    line-height: 90rpx;
    margin: 40rpx auto;
    border-radius: 46rpx;
    background: linear-gradient(90deg, rgba(250, 140, 29, 1) 0%, rgba(252, 173, 62, 1) 100%);
    &:active {
      opacity: .7;
    }
  }
</style>

<template>
  <view class="body">
    <!-- 轮播图 -->
    <view class="top-swiper-view">
      <swiper class="top-swiper" circular="{{true}}" indicator-dots="{{true}}" autoplay="{{true}}" interval="{{5000}}" duration="{{500}}">
        <swiper-item>
          <image src="https://ss3.bdstatic.com/lPoZeXSm1A5BphGlnYG/skin/610.jpg?2" style="width:100%;height:100%;" />
        </swiper-item>
        <swiper-item>
          <image src="https://ss3.bdstatic.com/lPoZeXSm1A5BphGlnYG/skin/610.jpg?2" style="width:100%;height:100%;" />
        </swiper-item>
        <swiper-item>
          <image src="https://ss3.bdstatic.com/lPoZeXSm1A5BphGlnYG/skin/610.jpg?2" style="width:100%;height:100%;" />
        </swiper-item>
        <swiper-item>
          <image src="https://ss3.bdstatic.com/lPoZeXSm1A5BphGlnYG/skin/610.jpg?2" style="width:100%;height:100%;" />
        </swiper-item>
      </swiper>
    </view>
    <!-- 我的位置 -->
    <view class="default-label-view">
      <view class="flex-label-view">
        <view class="flex-item-left-view">{{cityInfo.name}}</view>
        <view class="flex-item-right-view" @tap="handleCity">
          <view class="item-right-img-view">
            <image src="../images/position-icon.png" style="width:100%;height:100%;" />
          </view>
          <view class="item-right-label-view">我的位置</view>
        </view>
      </view>
    </view>
    <!-- 入住离店日期 -->
    <view class="default-label-view" @tap="changeDate">
      <view class="flex-date-info-view">
        <view class="flex-date-item-left-view">
          <view class="item-left-top-label-view">入住日期</view>
          <view class="item-left-bottom-label-view">
            <text>{{formatDate[0]}}</text>
            <text style="font-size:24rpx;margin-left:10rpx;">{{getDescribe[0]}}</text>
          </view>
        </view>
        <view class="flex-date-item-right-view">
          <view class="item-left-top-label-view">离店日期</view>
          <view class="item-left-bottom-label-view">
            <text>{{formatDate[1]}}</text>
            <text style="font-size:24rpx;margin-left:10rpx;">{{getDescribe[1]}}</text>
          </view>
        </view>
        <view class="abs-mid-label-view">共{{getDays}}晚</view>
      </view>
    </view>
    <!-- 关键字/地址/酒店 -->
    <view class="default-label-view">
      <view class="flex-label-view">
        <input style="width:100%;" @input="keywordInput" value="{{keyword}}" class="flex-address-left-view" placeholder="关键字/地址/酒店" placeholder-class="flex-address-left-views" />
      </view>
    </view>
    <!-- 价格/星级 -->
    <view class="default-label-view" @tap="showModal">
      <view class="flex-label-view">
        <input disabled value="{{priceAndStarlabel}}" class="flex-address-left-view" placeholder="价格/星级" placeholder-class="flex-address-left-views" />
        <view class="flex-address-right-view">
          <view class="item-right-img-view">
            <image src="../images/arrow-right-icon.png" style="width:100%;height:100%;" />
          </view>
        </view>
      </view>
    </view>
    <view class="submit-button-view" @tap="handleToSearch">查找全球家</view>
    <!-- 日期探出框 -->
    <datepopup size="750" duration='400' type="bottom" :showModal.sync="dateModalDialog" v-on:hideModal="hideDateDialog">
      <scroll-view style="height:750rpx;width:100%;overflow:hidden;" scroll-y>
        <datepicker v-on:closeDialog="closeDateDialog" months="4" :value.sync="_dateValue"></datepicker>
      </scroll-view>
    </datepopup>
    <!-- 价格星级 -->
    <priceandstarpopup size="750" duration='400' type="bottom" :showModal.sync="priceAndStarModalDialog">
      <view class="pop-label-view">
        <view class="pop-label-view-peice">
          <text class="pop-label-view-title">价格</text>
          <view>
            <view class="pop-label-view-star-menus">
              <repeat for="{{priceList}}" key="index" index="index" item="item">
                <view class="pop-label-view-star-menu {{item.checked?'checked-menu':''}}" @tap="handlePrice({{index}})">￥{{item.label}}</view>
              </repeat>
            </view>
          </view>
        </view>
        <view class="pop-label-view-star">
          <text class="pop-label-view-title">星级</text>
          <view class="pop-label-view-star-menus">
            <repeat for="{{starList}}" key="index" index="index" item="item">
              <view class="pop-label-view-star-menu {{item.checked?'checked-menu':''}}" @tap="handleStar({{index}})">{{item.label}}</view>
            </repeat>
          </view>
        </view>
      </view>
      <view class="popup-bottom-label-view">
        <button class="pop-label-view-button" style="background:#404040" @tap="handleReset">重置</button>
        <button class="pop-label-view-button" style="background:#FCAD3E" @tap="handleConfirms">确定</button>
      </view>
    </priceandstarpopup>
  </view>
</template>

<script>
  import wepy from "wepy";
  import {
    changePXToRPX
  } from "@/lib/wx-system.js";
  import {
    findRegions
  } from "../server/index.js";
  import {
    calculateDiffTime,
  } from "../lib/utils.js";
  import popup from '../components/popup/index'
  import datepicker from '../components/datepicker/index'
  var QQMapWX = require('../lib/qqmap-wx-jssdk.js');
  var qqmapsdk;
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: "首页",
      // enablePullDownRefresh: true,
      navigationStyle: "custom"
    };
    components = {
      priceandstarpopup: popup,
      datepopup: popup,
      datepicker: datepicker
    };
    data = {
      cityInfo: {
        id: 164132,
        name: '上海市',
        pinyin: 'shanghai',
        acronym: 'sh',
        rank: 'S',
        firstChar: 'S',
        lat: '31.230416',
        lng: '121.473701'
      },
      dateValue: [],
      _dateValue: [],
      keyword: '',
      dateModalDialog: false,
      priceAndStarModalDialog: false,
      starList: [{
          value: 0,
          label: '不限'
        },
        {
          value: 1,
          label: '经济/连锁'
        },
        {
          value: 2,
          label: '二星/其他'
        },
        {
          value: 3,
          label: '三星/舒适'
        },
        {
          value: 4,
          label: '四星/高档'
        },
        {
          value: 5,
          label: '五星/豪华'
        }
      ],
      priceList: [{
          value: ['', ''],
          label: '不限'
        },
        {
          value: ["0", "100"],
          label: '0-100'
        },
        {
          value: ["100", "150"],
          label: '100-150'
        },
        {
          value: ["150", "300"],
          label: '150-300'
        },
        {
          value: ["300", "500"],
          label: '300-500'
        },
        {
          value: ["500", "800"],
          label: '500-800'
        },
        {
          value: ["900", ''],
          label: '900以上'
        }
      ],
      priceAndStarlabel: '不限 不限',
      price: ['', ''],
      priceLabel: '不限',
      star: '0,',
      starLabel: '不限'
    };
    computed = {
      formatDate() {
        let value = [];
        if (this.dateValue.length > 0) {
          this.dateValue.forEach(item => {
            value.push(new Date(item).toString("MM月dd日"));
          });
        }
        return value;
      },
      getDays() {
        let days = 0;
        if (this.dateValue.length === 2) {
          let first = new Date(this.dateValue[0].replace(/-/gi, "/")).valueOf();
          let second = new Date(this.dateValue[1].replace(/-/gi, "/")).valueOf();
          let time = calculateDiffTime(first, second);
          days = time[0] / 24;
          return days;
        }
      },
      getDescribe() {
        let describe = ["", ""];
        if (this.dateValue.length === 2) {
          let currentDate = new Date();
          let currentStamp = new Date(
            currentDate.getFullYear(),
            currentDate.getMonth(),
            currentDate.getDate()
          ).valueOf();
          let first = new Date(this.dateValue[0].replace(/-/gi, "/")).valueOf();
          let second = new Date(this.dateValue[1].replace(/-/gi, "/")).valueOf();
          if (currentStamp == first) {
            describe[0] = "今天";
          } else if (currentStamp + 24 * 60 * 60 * 1000 == first) {
            describe[0] = "明天";
          } else if (currentStamp + 24 * 60 * 60 * 1000 * 2 == first) {
            describe[0] = "后天";
          } else {
           var str = '星期' + '日一二三四五六'.charAt(new Date(first).getDay());
            describe[0] = str;
          }
          if (currentStamp == second) {
            describe[1] = "今天";
          } else if (currentStamp + 24 * 60 * 60 * 1000 == second) {
            describe[1] = "明天";
          } else if (currentStamp + 24 * 60 * 60 * 1000 * 2 == second) {
            describe[1] = "后天";
          } else {
            var str = '星期' + '日一二三四五六'.charAt(new Date(second).getDay());
            describe[1] = str;
          }
        }
        return describe;
      }
    };
    watch = {};
    onLoad() {
      let that = this
      // 实例化API核心类
      qqmapsdk = new QQMapWX({
        key: '6EBBZ-IUDCK-2THJQ-AYT5B-C7MR7-JJFG7'
      });
      wepy.getLocation({
        type: 'wgs84'
      }).then(res => {
        this.cityInfo.lng = res.longitude
        this.cityInfo.lat = res.latitude
        wepy.setStorageSync('cityInfo', this.cityInfo)
        qqmapsdk.reverseGeocoder({
          location: {
            latitude: res.latitude,
            longitude: res.longitude
          },
          success: function(res) {
            that.cityInfo.name = res.result.ad_info.city
            that.$apply()
          }
        })
      }).catch(err => {
        console.log('尚未授权地理位置！')
      })
      let todayFormat = Date.today().toString("yyyy-MM-dd");
      let tomorrowFormat = Date.today().addDays(1).toString("yyyy-MM-dd");
      this.dateValue.push(todayFormat, tomorrowFormat);
      this._dateValue = this.dateValue
      this.$apply();
    }
    onShow() {
      let cityInfo = wepy.getStorageSync('cityInfo') || null
      if (cityInfo) {
        this.cityInfo = cityInfo
        this.$apply()
      }
    }
    methods = {
      handleCity() {
        wepy.navigateTo({
          url: './city'
        })
      },
      changeDate() {
        this._dateValue = this.dateValue
        this.dateModalDialog = true
        this.$apply()
      },
      keywordInput(e) {
        let value = e.detail.value
        this.keyword = value
        this.$apply()
      },
      showModal() {
        this.priceAndStarModalDialog = true
        this.priceList.forEach(item => {
          if (JSON.stringify(this.price) == JSON.stringify(item.value)) {
            item.checked = true
          } else {
            item.checked = false
          }
        });
        let starArr = []
        if (this.starLabel) {
          starArr = this.starLabel.split(' ')
        }
        this.starList.forEach(item => {
          let checked = false
          if (starArr.length > 0) {
            starArr.forEach(_item => {
              if (_item == item.label) {
                checked = true
              }
              item.checked = checked
            });
          } else {
            item.checked = checked
          }
        });
        this.$apply()
      },
      handlePrice(index) {
        this.priceList.forEach((item, _index) => {
          if (index == _index) {
            item.checked = true
          } else {
            item.checked = false
          }
        })
        this.$apply()
      },
      handleStar(index) {
        if (index == 0) {
          this.starList.forEach((item, _index) => {
            if (index == _index) {
              item.checked = true
            } else {
              item.checked = false
            }
          });
        } else {
          this.starList[0].checked = false
          this.starList[index].checked = !this.starList[index].checked
          let full = true
          this.starList.forEach((item, _index) => {
            if (_index > 0 && !item.checked) {
              full = false
            }
          });
          if (full) {
            this.starList.forEach((item, _index) => {
              if (_index == 0) {
                item.checked = true
              } else {
                item.checked = false
              }
            });
          }
        }
        this.$apply()
      },
      handleReset() {
        this.starList.forEach(item => {
          item.checked = false
        })
        this.priceList.forEach(item => {
          item.checked = false
        })
        this.starList[0].checked = true
        this.priceList[0].checked = true
        this.$apply()
      },
      handleConfirms() {
        let price = ''
        let priceLabel = ''
        let star = ''
        let starLabel = ''
        this.priceList.forEach(item => {
          if (item.checked) {
            price = item.value
            priceLabel = item.label
          }
        })
        this.starList.forEach(item => {
          if (item.checked) {
            star += item.value + ','
            starLabel += item.label + ' '
          }
        })
        this.price = price
        this.priceLabel = priceLabel
        this.star = star
        this.starLabel = starLabel
        if (price || star) {
          this.priceAndStarlabel = priceLabel + ' ' + starLabel
        } else {
          this.priceAndStarlabel = ''
        }
        this.priceAndStarModalDialog = false
        this.$apply()
      },
      hideDateDialog() {
        if (this._dateValue.length == 2) {
          this.dateValue = this._dateValue
          this.$apply()
        }
      },
      closeDateDialog(value) {
        console.log(value)
        if (value.length == 2) {
          this.dateValue = value
          this.dateModalDialog = false
          this.$apply()
        }
      },
      handleToSearch() {
        let cityObj = JSON.stringify(this.cityInfo)
        let dateValue = this.dateValue
        let keyword = this.keyword
        let star = this.star
        let starLabel = this.starLabel
        let price = this.price
        let priceLabel = this.priceLabel
        wepy.navigateTo({
          url: './searchList?cityInfo=' + cityObj + '&dateValue=' + dateValue + '&keyword=' + keyword + '&star=' + star + '&starLabel=' + starLabel + '&price=' + price + '&priceLabel=' + priceLabel
        })
      }
    };
    onHide() {}
    onUnload() {}
    // 下拉刷新事件
    onPullDownRefresh() {
      wepy.showNavigationBarLoading();
      wepy.stopPullDownRefresh();
      wepy.hideNavigationBarLoading();
    }
  }
</script>
